
# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Frontend CI

on:
  push:
    branches: [ production ]
  pull_request:
    branches: [ production ]

env: 
  DATABASE_URI: 'mongodb://localhost:27017'
  JWT_KEY: 'nicetry'
defaults:
  run:
    working-directory: front-end
jobs:
  test-api:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [14.x]
        mongodb-version: ['4.2']
    steps:
      - uses: actions/checkout@v2
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        working-directory: server
        
      - name: Run tests
        run: npm run test:api
        working-directory: server

      
      - uses: cypress-io/github-action@v2
        with:
          start: npm run start
          config-file: tests/cypress.json
          working-directory: server
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Deploy App
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{secrets.SSH_HOST}}
        key: ${{secrets.SSH_KEY}}
        username: ${{secrets.SSH_USERNAME}}
        script: |
          rm -r build
          rm -r /srv/dist
          mkdir build
          cd build
          git clone -b production git@github.com:phil-burney/Autafi.git
          cd Autafi/front-end
          mv dist /srv
          echo "Deployment to digitalocean successful"
          rm /srv/server/index.js
          rm -r /srv/server/models
          cd ..
          cd server
          mv index.js /srv/server
          mv models /srv/server

